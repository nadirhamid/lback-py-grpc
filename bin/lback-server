#! /usr/bin/python
from concurrent import futures
import time

import grpc

import argparse
from lback_grpc import server_pb2_grpc
from lback_grpc import shared_pb2
from lback_grpc.server import Server
from lback.utils import lback_settings, lback_agents, lback_output, lback_backups

def serve( addr ):
  lback_server = Server()
  server = grpc.server(futures.ThreadPoolExecutor(max_workers=10))
  server_pb2_grpc.add_ServerServicer_to_server(lback_server, server)
  server.add_insecure_port(addr)
  server.start()

  def schedule_backups():
       lback_output("SCHEDULING BACKUPS")
       backups = lback_backups()
       def schedule_shared_backup():
           lback_server.ScheduleSharedBackup( backup )
       def schedule_sharded_backup():
           ## not implmented
           pass

       for backup in backups:
           if backup.distribution_strategy == "shared":
               schedule_shared_backup()
           elif backup.distribution_strategy == "sharded":
               schedule_sharded_backup()
  def check_for_agent_updates():
       lback_output("CHECKING FOR NEW AGENTS")
       server_agents = lback_server.agents
       db_agents = lback_agents()
       for server_agent in server_agents:
          def db_agent_filter( db_agent ):
             if db_agent.id == server_agent[0].id:
                 return True
             return False
          filtered_db_agents = filter(db_agent_filter, db_agents)
          if not len( filtered_db_agents ) > 0: 
              lback_server.RemoveAgent(server_agent)
       for agent_object in db_agents:
            registered_agent = lback_server.FindAgent(agent_object.id)
            if not registered_agent:
                lback_server.AddAgentByDbObject(agent_object)
  try:
    while True:
       check_for_agent_updates()
       schedule_backups()
       time.sleep( 5.0 )
      
  except KeyboardInterrupt:
    server.stop(0)

if __name__ == '__main__':
  parser = argparse.ArgumentParser()
  parsed = parser.parse_args()
  settings = lback_settings()
  serve( "{}:{}".format( settings['server']['host'], settings['server']['port'] ) )
